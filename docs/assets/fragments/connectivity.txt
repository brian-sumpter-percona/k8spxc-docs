1. You will need the login and password for the admin user to access the
    cluster. Use `kubectl get secrets` command to see the list of Secrets
    objects (by default the Secrets object you are interested in has
    `cluster1-secrets` name). Then
    `kubectl get secret cluster1-secrets -o yaml` command will return
    the YAML file with generated Secrets, including the root password which
    should look as follows

    ```yaml
    ...
    data:
      ...
      root: cm9vdF9wYXNzd29yZA==
    ```

    Here the actual login name and password are base64-encoded. Use 
    `echo 'cm9vdF9wYXNzd29yZA==' | base64 --decode` command to bring it
    back to a human-readable form.

2. Run a container with `mysql` tool and connect its console output to your
    terminal. The following command will do this, naming the new Pod
    `percona-client`:

    ```bash
    $ kubectl run -i --rm --tty percona-client --image=percona:8.0 --restart=Never -- bash -il
    ```

    Executing it may require some time to deploy the correspondent Pod.

3. Now run `mysql` tool in the percona-client command shell using the password
    obtained from the secret. The command will look different depending on
    whether your cluster provides load balancing with [HAProxy](haproxy-conf.md)
    (the default choice) or [ProxySQL](proxysql-conf.md):

    === "with HAProxy (default)"
        ```bash
        $ mysql -h cluster1-haproxy -uroot -proot_password
        ```

    === "with ProxySQL"
        ```bash
        $ mysql -h cluster1-proxysql -uroot -proot_password
        ```
